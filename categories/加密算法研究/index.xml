<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>加密算法研究 - 分类 - tcc0lin&#39;s blog</title>
        <link>https://tcc0lin.github.io/categories/%E5%8A%A0%E5%AF%86%E7%AE%97%E6%B3%95%E7%A0%94%E7%A9%B6/</link>
        <description>加密算法研究 - 分类 - tcc0lin&#39;s blog</description>
        <generator>Hugo -- gohugo.io</generator><language>zh-CN</language><lastBuildDate>Tue, 09 May 2023 22:36:47 &#43;0800</lastBuildDate><atom:link href="https://tcc0lin.github.io/categories/%E5%8A%A0%E5%AF%86%E7%AE%97%E6%B3%95%E7%A0%94%E7%A9%B6/" rel="self" type="application/rss+xml" /><item>
    <title>Feistel密码结构学习</title>
    <link>https://tcc0lin.github.io/feistel%E5%AF%86%E7%A0%81%E7%BB%93%E6%9E%84%E5%AD%A6%E4%B9%A0/</link>
    <pubDate>Tue, 09 May 2023 22:36:47 &#43;0800</pubDate><author>
        <name>tcc0lin</name>
    </author><guid>https://tcc0lin.github.io/feistel%E5%AF%86%E7%A0%81%E7%BB%93%E6%9E%84%E5%AD%A6%E4%B9%A0/</guid>
    <description><![CDATA[]]></description>
</item><item>
    <title>从FIPS 197中理解AES算法</title>
    <link>https://tcc0lin.github.io/%E4%BB%8Efips-197%E4%B8%AD%E7%90%86%E8%A7%A3aes%E7%AE%97%E6%B3%95/</link>
    <pubDate>Tue, 09 May 2023 22:36:47 &#43;0800</pubDate><author>
        <name>tcc0lin</name>
    </author><guid>https://tcc0lin.github.io/%E4%BB%8Efips-197%E4%B8%AD%E7%90%86%E8%A7%A3aes%E7%AE%97%E6%B3%95/</guid>
    <description><![CDATA[]]></description>
</item><item>
    <title>从FIPS 46-3中理解DES算法</title>
    <link>https://tcc0lin.github.io/%E4%BB%8Efips-46-3%E4%B8%AD%E7%90%86%E8%A7%A3des%E7%AE%97%E6%B3%95/</link>
    <pubDate>Tue, 09 May 2023 22:36:47 &#43;0800</pubDate><author>
        <name>tcc0lin</name>
    </author><guid>https://tcc0lin.github.io/%E4%BB%8Efips-46-3%E4%B8%AD%E7%90%86%E8%A7%A3des%E7%AE%97%E6%B3%95/</guid>
    <description><![CDATA[DES是一种对称密钥的块加密算法。”对称密钥”，是因为加密、解密用的密钥是一样的（这不同于RSA等非对称密钥体系）。“块加密”，是因为这种算]]></description>
</item><item>
    <title>从RFC1321中理解MD5算法</title>
    <link>https://tcc0lin.github.io/%E4%BB%8Erfc1321%E4%B8%AD%E7%90%86%E8%A7%A3md5%E7%AE%97%E6%B3%95/</link>
    <pubDate>Tue, 09 May 2023 22:36:47 &#43;0800</pubDate><author>
        <name>tcc0lin</name>
    </author><guid>https://tcc0lin.github.io/%E4%BB%8Erfc1321%E4%B8%AD%E7%90%86%E8%A7%A3md5%E7%AE%97%E6%B3%95/</guid>
    <description><![CDATA[一、前置知识点MD5算法的输入是任意长度的信息，而输出是固定的长度为128位的信息，也就是固定大小为16字节的数组（byte=8bit） 二、]]></description>
</item><item>
    <title>从RFC2040中理解RC5算法</title>
    <link>https://tcc0lin.github.io/%E4%BB%8Erfc2040%E4%B8%AD%E7%90%86%E8%A7%A3rc5%E7%AE%97%E6%B3%95/</link>
    <pubDate>Tue, 09 May 2023 22:36:47 &#43;0800</pubDate><author>
        <name>tcc0lin</name>
    </author><guid>https://tcc0lin.github.io/%E4%BB%8Erfc2040%E4%B8%AD%E7%90%86%E8%A7%A3rc5%E7%AE%97%E6%B3%95/</guid>
    <description><![CDATA[一、RC5算法概述作为同样是由Rivest推出的算法，RC5算法与RC4算法是完全不同的，一个明显的特征是RC5采用的是基于Feistel对]]></description>
</item><item>
    <title>从RFC3174中理解SHA1算法</title>
    <link>https://tcc0lin.github.io/%E4%BB%8Erfc3174%E4%B8%AD%E7%90%86%E8%A7%A3sha1%E7%AE%97%E6%B3%95/</link>
    <pubDate>Tue, 09 May 2023 22:36:47 &#43;0800</pubDate><author>
        <name>tcc0lin</name>
    </author><guid>https://tcc0lin.github.io/%E4%BB%8Erfc3174%E4%B8%AD%E7%90%86%E8%A7%A3sha1%E7%AE%97%E6%B3%95/</guid>
    <description><![CDATA[一、前置知识点总体上来说，SHA1算法和MD5算法很类似（因为它们都属于是针对于信息摘要的哈希算法），大体的算法流程也是基本相同，可以回忆下]]></description>
</item><item>
    <title>从RFC4648中理解Base64算法</title>
    <link>https://tcc0lin.github.io/%E4%BB%8Erfc4648%E4%B8%AD%E7%90%86%E8%A7%A3base64%E7%AE%97%E6%B3%95/</link>
    <pubDate>Tue, 09 May 2023 22:36:47 &#43;0800</pubDate><author>
        <name>tcc0lin</name>
    </author><guid>https://tcc0lin.github.io/%E4%BB%8Erfc4648%E4%B8%AD%E7%90%86%E8%A7%A3base64%E7%AE%97%E6%B3%95/</guid>
    <description><![CDATA[一、前置知识点Base64算法是一种编码算法，它是采用常见的64个字符来表示做数据映射的表，分别是A-Z、a-z、+、/。 64对应的二进制是]]></description>
</item><item>
    <title>从RFC6229中理解RC4算法</title>
    <link>https://tcc0lin.github.io/%E4%BB%8Erfc6229%E4%B8%AD%E7%90%86%E8%A7%A3rc4%E7%AE%97%E6%B3%95/</link>
    <pubDate>Tue, 09 May 2023 22:36:47 &#43;0800</pubDate><author>
        <name>tcc0lin</name>
    </author><guid>https://tcc0lin.github.io/%E4%BB%8Erfc6229%E4%B8%AD%E7%90%86%E8%A7%A3rc4%E7%AE%97%E6%B3%95/</guid>
    <description><![CDATA[一、RC4概述RC4是在1987年提出，和DES算法一样。是一种对称加密算法，也就是说使用的密钥为单钥（或称为私钥）。但不同于DES算法的是]]></description>
</item><item>
    <title>从RFC6234中理解SHA2-256算法</title>
    <link>https://tcc0lin.github.io/%E4%BB%8Erfc6234%E4%B8%AD%E7%90%86%E8%A7%A3sha2-256%E7%AE%97%E6%B3%95/</link>
    <pubDate>Tue, 09 May 2023 22:36:47 &#43;0800</pubDate><author>
        <name>tcc0lin</name>
    </author><guid>https://tcc0lin.github.io/%E4%BB%8Erfc6234%E4%B8%AD%E7%90%86%E8%A7%A3sha2-256%E7%AE%97%E6%B3%95/</guid>
    <description><![CDATA[一、前置知识点SHA2-256算法是SHA第二代的算法，256指的是它的算法结果会产生256位数据，也就是32字节、64位长度的16进制字符]]></description>
</item><item>
    <title>理解CRC32算法</title>
    <link>https://tcc0lin.github.io/%E7%90%86%E8%A7%A3crc32%E7%AE%97%E6%B3%95/</link>
    <pubDate>Tue, 09 May 2023 22:36:47 &#43;0800</pubDate><author>
        <name>tcc0lin</name>
    </author><guid>https://tcc0lin.github.io/%E7%90%86%E8%A7%A3crc32%E7%AE%97%E6%B3%95/</guid>
    <description><![CDATA[一、CRC算法概述 循环冗余校验（Cyclic Redundancy Check， CRC）是一种根据网络数据包或计算机文件等数据产生简短固定位数校验码的一种信道编码]]></description>
</item></channel>
</rss>
